import type { LocaleConfig } from "@vuepress/shared";
import type { PropType } from "vue";
export declare type SearchPageLocales = LocaleConfig<{
    placeholder: string;
}>;
export declare const SearchPage: import("vue").DefineComponent<{
    locales: {
        type: PropType<SearchPageLocales>;
        required: false;
        default: () => {};
    };
    hotKeys: {
        type: PropType<string[]>;
        required: false;
        default: () => never[];
    };
    maxSuggestions: {
        type: NumberConstructor;
        required: false;
        default: number;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    locales: {
        type: PropType<SearchPageLocales>;
        required: false;
        default: () => {};
    };
    hotKeys: {
        type: PropType<string[]>;
        required: false;
        default: () => never[];
    };
    maxSuggestions: {
        type: NumberConstructor;
        required: false;
        default: number;
    };
}>>, {
    hotKeys: string[];
    maxSuggestions: number;
    locales: SearchPageLocales;
}>;
//# sourceMappingURL=SearchPage.d.ts.map
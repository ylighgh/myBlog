"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.rssPlugin = void 0;
const utils_1 = require("@vuepress/utils");
const rss_1 = __importDefault(require("rss"));
const rssPlugin = (options, app) => {
    return {
        name: "@renovamen/vuepress-plugin-rss",
        async onGenerated(app) {
            const { filter = () => true, count = 20 } = options;
            const rssURL = `${options.siteURL}/rss.xml`;
            const feed = new rss_1.default({
                title: options.title || app.options.title,
                description: options.description || "",
                feed_url: rssURL,
                site_url: `${options.siteURL}`,
                copyright: `${options.copyright || ""}`,
                language: "en"
            });
            app.pages
                .filter((page) => filter(page))
                .map((page) => ({
                ...page,
                date: new Date(page.frontmatter.date || "")
            }))
                .sort((a, b) => b.date.getTime() - a.date.getTime())
                .map((page) => ({
                title: page.frontmatter.title || "",
                description: page.excerpt || "",
                url: `${options.siteURL}${page.path}`,
                date: page.date
            }))
                .slice(0, count)
                .forEach((page) => feed.item(page));
            const outputPath = utils_1.path.resolve(app.dir.dest("rss.xml"));
            utils_1.fs.writeFile(outputPath, feed.xml());
            utils_1.logger.success(`RSS has been generated to: ${outputPath}, you can see it via: ${rssURL}`);
        }
    };
};
exports.rssPlugin = rssPlugin;
